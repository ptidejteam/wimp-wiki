"use strict";(self.webpackChunkexamples_classic=self.webpackChunkexamples_classic||[]).push([[249],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||o;return n?r.createElement(m,i(i({ref:t},d),{},{components:n})):r.createElement(m,i({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7484:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},i="Frontend",s={unversionedId:"frontend/frontend",id:"frontend/frontend",isDocsHomePage:!1,title:"Frontend",description:"Routes",source:"@site/docs/frontend/frontend.md",sourceDirName:"frontend",slug:"/frontend/frontend",permalink:"/wimp-wiki/docs/frontend/frontend",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/frontend/frontend.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/wimp-wiki/docs/frontend/intro"},next:{title:"Introduction",permalink:"/wimp-wiki/docs/backend/intro"}},l=[{value:"Routes",id:"routes",children:[]},{value:"Data",id:"data",children:[]},{value:"Login",id:"login",children:[]},{value:"Security",id:"security",children:[]},{value:"?",id:"",children:[]}],c={toc:l};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"frontend"},"Frontend"),(0,a.kt)("h2",{id:"routes"},"Routes"),(0,a.kt)("p",null,"The express server delivers a very classical REST api whose routes are :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"/home ","\u2192"," Dashboard with information on teachers availability"),(0,a.kt)("li",{parentName:"ul"},"/login ","\u2192"," Login page & Login form"),(0,a.kt)("li",{parentName:"ul"},"/error ","\u2192"," Display http errors")),(0,a.kt)("h2",{id:"data"},"Data"),(0,a.kt)("p",null,"This server uses the REST API provided by the backend server to retrieve information as .json. With a ",(0,a.kt)("inlineCode",{parentName:"p"},"[POST]/states")," the web server receives all the status of the teachers. "),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The request on ",(0,a.kt)("inlineCode",{parentName:"p"},"/states")," is a POST method because the frontend needs to provide a password in the body of the reques to access the backend data."))),(0,a.kt)("p",null,"The web server processes the information according to the level of education of the connected person and returns the corresponding page.\nSee ",(0,a.kt)("inlineCode",{parentName:"p"},"app.get('/home'...")," in /server.js."),(0,a.kt)("h2",{id:"login"},"Login"),(0,a.kt)("p",null,"A connection system has been set up to allow data security and to authenticate the students (especially to know the level of study called ",(0,a.kt)("em",{parentName:"p"},"role"),").\nthere are 3 different roles :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Student"),(0,a.kt)("li",{parentName:"ul"},"Researcher"),(0,a.kt)("li",{parentName:"ul"},"Colleague of Teacher")),(0,a.kt)("p",null,"Students who go to the site without a logged session are redirected to the login page. They fill their username and password."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Login Page",src:n(5581).Z})),(0,a.kt)("p",null,"This page is under the /login route.\nWith ","[GET]","/login that sends the page back and ","[POST]","/login that receives the information to establish the connection or not.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"static/login/login.js")," which is link to the ",(0,a.kt)("inlineCode",{parentName:"p"},"pages/login.html")," do the ","[POST]"," request to submit the form."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"$(function(){\n    $(function(){\n        $('#login-form').on('submit', function(e){\n            alertify.set('notifier','position', 'top-right');\n            e.preventDefault();\n            $.ajax({\n                url: protocol + '://' + frontendUrl + '/login',\n                type: 'POST',\n                data: $('#login-form').serialize(),\n                success: function(data){\n                    location.href = \"/home\";\n                },\n                error: function(data){\n                    console.log(\"failed\");\n                    if (data.status === 401) { alertify.error(data.statusText + \": Invalid credentials\", 'error', 5 )};\n                }            \n            });\n        });\n    });\n});\n")),(0,a.kt)("h2",{id:"security"},"Security"),(0,a.kt)("p",null,"The connection is made with Passport.js.\nWhen the connection form is submitted (","[POST]","/login) Passport is called and checks if the couple ",(0,a.kt)("inlineCode",{parentName:"p"},'{"idStudent" : "password" }')," in the database ",(0,a.kt)("inlineCode",{parentName:"p"},"database/db_acc.json"),".\nPassport store the conections data in a http session to maintain the connection without having to reconnect each time. See more about ",(0,a.kt)("a",{parentName:"p",href:"https://www.passportjs.org/packages/passport-local/"},"passport"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// /server.js\npassport.use(new LocalStrategy(\n    (username, password, done) => {\n        const db_acc = new dbjson( __dirname + '/database/db_acc.json');\n        let acc = db_acc.get(username);\n        if (acc === undefined || acc.pwd != password){\n            console.log('Failed to authorize : ' + username);\n            return done(null, false);\n        } \n        else{\n            console.log('Authorized : ' + username);\n            let authenticated_user = {\n                id: username,\n                role: acc.role,\n            };\n            return done(null, authenticated_user);\n        }  \n    }\n));\n\napp.post('/login',\n  passport.authenticate('local', { failureMessage: \"true\" }),\n  async (req, res) => {\n      res.redirect('/home');\n});\n")),(0,a.kt)("p",null,"The checkAuthenticated function is used as a middelware to check if the session contains a login. If not, the requested page is inaccessible and the user is redirected to /login"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// /server.js\ncheckAuthenticated = (req, res, next) => {\n    console.log("Authenticating for access to " + req.originalUrl + "...")\n    if (req.isAuthenticated()) { \n        console.log("Authentication done for access to " + req.originalUrl);\n        return next();\n    }\n    res.redirect("/login")\n}\n')),(0,a.kt)("h2",{id:""},"?"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"}," Why no registration pages? "),"\nbecause the students are theorically already in the concordia database."))}d.isMDXComponent=!0},5581:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/login-1210eb69af77f919e4646ca708679268.png"}}]);