"use strict";(self.webpackChunkexamples_classic=self.webpackChunkexamples_classic||[]).push([[69],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5809:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2},i="Backend Configuration",s={unversionedId:"deploy/configure_backend",id:"deploy/configure_backend",isDocsHomePage:!1,title:"Backend Configuration",description:"This page will describe how to configure the backend part of the WIMP system.",source:"@site/docs/deploy/configure_backend.md",sourceDirName:"deploy",slug:"/deploy/configure_backend",permalink:"/wimp-wiki/docs/deploy/configure_backend",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/deploy/configure_backend.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Deployment Guide",permalink:"/wimp-wiki/docs/deploy/deploy"},next:{title:"Frontend Configuration",permalink:"/wimp-wiki/docs/deploy/configure_frontend"}},l=[{value:"Configure the Raspberry",id:"configure-the-raspberry",children:[]},{value:"Pull the sources",id:"pull-the-sources",children:[]},{value:"Configure Redis",id:"configure-redis",children:[]},{value:"Configure the environment",id:"configure-the-environment",children:[]}],p={toc:l};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"backend-configuration"},"Backend Configuration"),(0,o.kt)("p",null,"This page will describe how to configure the backend part of the WIMP system. "),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'As a reminder, the "Backend" term in the WIMP system refers to the part that is accessible to teachers and administrators. For more information about the definitions used in the WIMP system, please see ',(0,o.kt)("a",{parentName:"p",href:"/wimp-wiki/docs/intro"},"this page"),"."))),(0,o.kt)("h2",{id:"configure-the-raspberry"},"Configure the Raspberry"),(0,o.kt)("p",null,"On your first Raspberry Pi (or server), if you have a firewall installed, then the first step is to add some new rules : "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Ensure that the port 8080 is open for ExpressAPI communication."),(0,o.kt)("li",{parentName:"ul"},"Ensure that the port 1880 is open for Node-RED communication."),(0,o.kt)("li",{parentName:"ul"},"Ensure that all the ports for the communications between your IoT devices and your Raspberry are open (for example, use a WeMo smart plug implies to open the port 9000).\n/!\\ On a Raspberry when the firewall (ufw) is not activated the ports are closed by default. So you have to activate ufw and make sure that port 22 is open before activate it.")),(0,o.kt)("h2",{id:"pull-the-sources"},"Pull the sources"),(0,o.kt)("p",null,"Once you have configured your firewall, you can now pull the Github project that corresponds to the Teacher/Admin part :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In order to pull the repository, you must ask to an admin for a Github access token."),(0,o.kt)("li",{parentName:"ul"},"Once you have your access token, you can simply pull the repository :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://<github-username>:<github-token>@github.com/ptidejteam/wimp-backend\n\ncd ./wimp-backend/\n")),(0,o.kt)("p",null,"Now you can move on to configuring the service and exposing the backend with Nginx."),(0,o.kt)("h2",{id:"configure-redis"},"Configure Redis"),(0,o.kt)("p",null,"We use Redis in order to limit the number of requests on the POST login endpoint. This protects the form from brute force attacks. This protection aims to blacklist malicious IPs that try to attack by brute force the login form."),(0,o.kt)("p",null,"To set up Redis in this context, you need to : "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Install Redis on the Raspberry Pi or server that host the frontend part of the system by following this ",(0,o.kt)("a",{parentName:"p",href:"https://amalgjose.com/2020/08/11/how-to-install-redis-in-raspberry-pi/"},"tutorial"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Configure a systemctl service for the redis server : "))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo cp -p ~/wimp-frontend/conf/wimp-redis.service /etc/systemd/system/\nsudo systemctl enable wimp-redis.service\nsudo systemctl start wimp-redis.service\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Check if the Redis server is up :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl status wimp-redis\nredis-cli ping\n")),(0,o.kt)("h2",{id:"configure-the-environment"},"Configure the environment"),(0,o.kt)("p",null,"Now you need to add a file that will contains the environement variables for the Backend part of the system : "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create a file named ",(0,o.kt)("inlineCode",{parentName:"li"},".env")," in the directory ",(0,o.kt)("inlineCode",{parentName:"li"},"ExpressNodeRed")," :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ./ExpressNodeRed/\nvim .env\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"And fill it with the following lines, replacing the values with your information :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ENV=prod\nPROTOCOL=https\nFRONTEND_HOST=**@IP of the Raspberry Pi that hosts the frontend part**\nFRONTEND_PORT=8080\nBACKEND_HOST=**@IP of the current Raspberry Pi**\nBACKEND_PORT=8080\nSESSION_SECRET=**Generate a strong session secret to manage the session**\nBACKEND_SECRET=**Backend password encrypted with Bcrypt**\nBACKEND_RESTRICTED_ACCESS=/node/currentStates\nEXTERNAL_DEVICES_ROUTES=**List of the Node-RED endpoints in your flows**\nNODE_RED_SECRET=**Clear password of Node-RED API**\nNODE_RED_SECRET_ENC=**Encrypted password of Node-RED API with Bcrypt**\nREDIS_URL=redis://127.0.0.1:6379/0\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The field ",(0,o.kt)("inlineCode",{parentName:"p"},"EXTERNAL_DEVICES_ROUTES")," field must be formatted like ",(0,o.kt)("inlineCode",{parentName:"p"},"/myroute1,/myroute2,/myroute3"),"."))))}c.isMDXComponent=!0}}]);